{"ast":null,"code":"// ELEMENT: Toggle view of password input\nexport function togglePasswordView(passwordElementName, buttonElementName) {\n  const passwordElement = document.getElementById(passwordElementName);\n  const buttonElement = document.getElementById(buttonElementName);\n  if (passwordElement.type === \"password\") {\n    passwordElement.type = \"text\";\n    buttonElement.src = \"/imgs/Hide Button.png\";\n  } else {\n    passwordElement.type = \"password\";\n    buttonElement.src = \"/imgs/View Button.png\";\n  }\n}\n\n// REQUEST: Send login request to server for verifification.\nexport function sendLoginRequest(usernameElement, passwordElement) {\n  const usernameValue = document.getElementById(usernameElement).value;\n  const passwordValue = document.getElementById(passwordElement).value;\n  const loginRequest = {\n    username: usernameValue,\n    password: passwordValue\n  };\n\n  // Send request to server\n  fetch('http://localhost:3001/api/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(loginRequest)\n  }).then(response => {\n    // Success (~200 range)\n    if (response.ok) {\n      console.log('Login successful!');\n    } else {\n      console.error('Login failed:', response);\n      throw new Error('Login failed');\n    }\n  }).catch(error => {\n    console.error('Error sending login request:', error);\n  });\n}\n\n// REQUEST: Send signup request to server for encryption and storage.\nexport function sendSignupRequest(usernameElement, passwordElement) {\n  const usernameValue = document.getElementById(usernameElement).value;\n  const passwordValue = document.getElementById(passwordElement).value;\n  const signupRequest = {\n    username: usernameValue,\n    password: passwordValue\n  };\n\n  // Send request to server\n  fetch('http://localhost:3001/api/signup', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(signupRequest)\n  }).then(response => {\n    // Success (~200 range)\n    if (response.ok) {\n      console.log('Signup successful!');\n    } else {\n      console.error('Signup failed:', response);\n      throw new Error('Signup failed');\n    }\n  }).catch(error => {\n    console.error('Error sending signup request:', error);\n  });\n}","map":{"version":3,"names":["togglePasswordView","passwordElementName","buttonElementName","passwordElement","document","getElementById","buttonElement","type","src","sendLoginRequest","usernameElement","usernameValue","value","passwordValue","loginRequest","username","password","fetch","method","headers","body","JSON","stringify","then","response","ok","console","log","error","Error","catch","sendSignupRequest","signupRequest"],"sources":["/Users/evelynzhang/Documents/Nyeow/src/nyeow/Scripts/AccountScript.js"],"sourcesContent":["// ELEMENT: Toggle view of password input\nexport function togglePasswordView(passwordElementName, buttonElementName) {\n    const passwordElement = document.getElementById(passwordElementName);\n    const buttonElement = document.getElementById(buttonElementName);\n\n    if (passwordElement.type === \"password\") {\n        passwordElement.type = \"text\";\n        buttonElement.src = \"/imgs/Hide Button.png\";\n    } else {\n        passwordElement.type = \"password\";\n        buttonElement.src = \"/imgs/View Button.png\";\n    }\n}\n\n// REQUEST: Send login request to server for verifification.\nexport function sendLoginRequest(usernameElement, passwordElement) {\n    const usernameValue = document.getElementById(usernameElement).value;\n    const passwordValue = document.getElementById(passwordElement).value;\n    const loginRequest = {\n        username: usernameValue,\n        password: passwordValue,\n    };\n\n    // Send request to server\n    fetch('http://localhost:3001/api/login', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(loginRequest),\n    })\n    .then(response => {\n        // Success (~200 range)\n        if (response.ok) {\n            console.log('Login successful!');\n        } else {\n            console.error('Login failed:', response);\n            throw new Error('Login failed');\n        }\n    })\n    .catch(error => {\n        console.error('Error sending login request:', error);\n    });\n}\n\n// REQUEST: Send signup request to server for encryption and storage.\nexport function sendSignupRequest(usernameElement, passwordElement) {\n    const usernameValue = document.getElementById(usernameElement).value;\n    const passwordValue = document.getElementById(passwordElement).value;\n    const signupRequest = {\n        username: usernameValue,\n        password: passwordValue,\n    };\n\n    // Send request to server\n    fetch('http://localhost:3001/api/signup', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(signupRequest),\n    })\n    .then(response => {\n        // Success (~200 range)\n        if (response.ok) {\n            console.log('Signup successful!');\n        } else {\n            console.error('Signup failed:', response);\n            throw new Error('Signup failed');\n        }\n    })\n    .catch(error => {\n        console.error('Error sending signup request:', error);\n    });\n}\n\n"],"mappings":"AAAA;AACA,OAAO,SAASA,kBAAkBA,CAACC,mBAAmB,EAAEC,iBAAiB,EAAE;EACvE,MAAMC,eAAe,GAAGC,QAAQ,CAACC,cAAc,CAACJ,mBAAmB,CAAC;EACpE,MAAMK,aAAa,GAAGF,QAAQ,CAACC,cAAc,CAACH,iBAAiB,CAAC;EAEhE,IAAIC,eAAe,CAACI,IAAI,KAAK,UAAU,EAAE;IACrCJ,eAAe,CAACI,IAAI,GAAG,MAAM;IAC7BD,aAAa,CAACE,GAAG,GAAG,uBAAuB;EAC/C,CAAC,MAAM;IACHL,eAAe,CAACI,IAAI,GAAG,UAAU;IACjCD,aAAa,CAACE,GAAG,GAAG,uBAAuB;EAC/C;AACJ;;AAEA;AACA,OAAO,SAASC,gBAAgBA,CAACC,eAAe,EAAEP,eAAe,EAAE;EAC/D,MAAMQ,aAAa,GAAGP,QAAQ,CAACC,cAAc,CAACK,eAAe,CAAC,CAACE,KAAK;EACpE,MAAMC,aAAa,GAAGT,QAAQ,CAACC,cAAc,CAACF,eAAe,CAAC,CAACS,KAAK;EACpE,MAAME,YAAY,GAAG;IACjBC,QAAQ,EAAEJ,aAAa;IACvBK,QAAQ,EAAEH;EACd,CAAC;;EAED;EACAI,KAAK,CAAC,iCAAiC,EAAE;IACrCC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,YAAY;EACrC,CAAC,CAAC,CACDS,IAAI,CAACC,QAAQ,IAAI;IACd;IACA,IAAIA,QAAQ,CAACC,EAAE,EAAE;MACbC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IACpC,CAAC,MAAM;MACHD,OAAO,CAACE,KAAK,CAAC,eAAe,EAAEJ,QAAQ,CAAC;MACxC,MAAM,IAAIK,KAAK,CAAC,cAAc,CAAC;IACnC;EACJ,CAAC,CAAC,CACDC,KAAK,CAACF,KAAK,IAAI;IACZF,OAAO,CAACE,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;EACxD,CAAC,CAAC;AACN;;AAEA;AACA,OAAO,SAASG,iBAAiBA,CAACrB,eAAe,EAAEP,eAAe,EAAE;EAChE,MAAMQ,aAAa,GAAGP,QAAQ,CAACC,cAAc,CAACK,eAAe,CAAC,CAACE,KAAK;EACpE,MAAMC,aAAa,GAAGT,QAAQ,CAACC,cAAc,CAACF,eAAe,CAAC,CAACS,KAAK;EACpE,MAAMoB,aAAa,GAAG;IAClBjB,QAAQ,EAAEJ,aAAa;IACvBK,QAAQ,EAAEH;EACd,CAAC;;EAED;EACAI,KAAK,CAAC,kCAAkC,EAAE;IACtCC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACU,aAAa;EACtC,CAAC,CAAC,CACDT,IAAI,CAACC,QAAQ,IAAI;IACd;IACA,IAAIA,QAAQ,CAACC,EAAE,EAAE;MACbC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACrC,CAAC,MAAM;MACHD,OAAO,CAACE,KAAK,CAAC,gBAAgB,EAAEJ,QAAQ,CAAC;MACzC,MAAM,IAAIK,KAAK,CAAC,eAAe,CAAC;IACpC;EACJ,CAAC,CAAC,CACDC,KAAK,CAACF,KAAK,IAAI;IACZF,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;EACzD,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}