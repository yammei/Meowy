{"ast":null,"code":"// ELEMENT: Toggle view of password input\nexport function togglePasswordView(passwordElementName,buttonElementName){const passwordElement=document.getElementById(passwordElementName);const buttonElement=document.getElementById(buttonElementName);if(passwordElement.type===\"password\"){passwordElement.type=\"text\";buttonElement.src=\"/imgs/Hide Button.png\";}else{passwordElement.type=\"password\";buttonElement.src=\"/imgs/View Button.png\";}}// REQUEST: Send login request to server for verifification.\nexport async function sendLoginRequest(usernameElement,passwordElement){const usernameValue=document.getElementById(usernameElement).value;const passwordValue=document.getElementById(passwordElement).value;const loginRequest={username:usernameValue,password:passwordValue};// Send request to server\nconst res=await fetch('http://localhost:3001/api/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(loginRequest)});// Success (~200 range)\nif(res.ok){console.log('Client Message: Login successful!');return true;}else{console.error('Login failed:',res);throw new Error('Login failed');}}// REQUEST: Send signup request to server for encryption and storage.\nexport async function sendSignupRequest(usernameElement,passwordElement){const usernameValue=document.getElementById(usernameElement).value;const passwordValue=document.getElementById(passwordElement).value;const signupRequest={username:usernameValue,password:passwordValue};// Send request to server\nconst res=await fetch('http://localhost:3001/api/signup',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(signupRequest)});// Success (~200 range)\nif(res.ok){console.log('Signup successful!');}else{console.error('Signup failed:',res);throw new Error('Signup failed');}}","map":{"version":3,"names":["togglePasswordView","passwordElementName","buttonElementName","passwordElement","document","getElementById","buttonElement","type","src","sendLoginRequest","usernameElement","usernameValue","value","passwordValue","loginRequest","username","password","res","fetch","method","headers","body","JSON","stringify","ok","console","log","error","Error","sendSignupRequest","signupRequest"],"sources":["/Users/evelynzhang/Library/Mobile Documents/com~apple~CloudDocs/Documents/Documents - Evelynâ€™s Mac mini/Nyeow/src/nyeow/Scripts/AccountScript.js"],"sourcesContent":["// ELEMENT: Toggle view of password input\nexport function togglePasswordView(passwordElementName, buttonElementName) {\n    const passwordElement = document.getElementById(passwordElementName);\n    const buttonElement = document.getElementById(buttonElementName);\n\n    if (passwordElement.type === \"password\") {\n        passwordElement.type = \"text\";\n        buttonElement.src = \"/imgs/Hide Button.png\";\n    } else {\n        passwordElement.type = \"password\";\n        buttonElement.src = \"/imgs/View Button.png\";\n    }\n}\n\n// REQUEST: Send login request to server for verifification.\nexport async function sendLoginRequest(usernameElement, passwordElement) {\n    const usernameValue = document.getElementById(usernameElement).value;\n    const passwordValue = document.getElementById(passwordElement).value;\n    const loginRequest = {\n        username: usernameValue,\n        password: passwordValue,\n    };\n\n    // Send request to server\n    const res = await fetch('http://localhost:3001/api/login', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(loginRequest),\n    })\n\n    // Success (~200 range)\n    if (res.ok) {\n        console.log('Client Message: Login successful!');\n        return true;\n    } else {\n        console.error('Login failed:', res);\n        throw new Error('Login failed');\n    }\n\n}\n\n// REQUEST: Send signup request to server for encryption and storage.\nexport async function sendSignupRequest(usernameElement, passwordElement) {\n    const usernameValue = document.getElementById(usernameElement).value;\n    const passwordValue = document.getElementById(passwordElement).value;\n    const signupRequest = {\n        username: usernameValue,\n        password: passwordValue,\n    };\n\n    // Send request to server\n    const res = await fetch('http://localhost:3001/api/signup', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(signupRequest),\n    })\n\n    // Success (~200 range)\n    if (res.ok) {\n        console.log('Signup successful!');\n    } else {\n        console.error('Signup failed:', res);\n        throw new Error('Signup failed');\n    }\n\n}\n\n"],"mappings":"AAAA;AACA,MAAO,SAAS,CAAAA,kBAAkBA,CAACC,mBAAmB,CAAEC,iBAAiB,CAAE,CACvE,KAAM,CAAAC,eAAe,CAAGC,QAAQ,CAACC,cAAc,CAACJ,mBAAmB,CAAC,CACpE,KAAM,CAAAK,aAAa,CAAGF,QAAQ,CAACC,cAAc,CAACH,iBAAiB,CAAC,CAEhE,GAAIC,eAAe,CAACI,IAAI,GAAK,UAAU,CAAE,CACrCJ,eAAe,CAACI,IAAI,CAAG,MAAM,CAC7BD,aAAa,CAACE,GAAG,CAAG,uBAAuB,CAC/C,CAAC,IAAM,CACHL,eAAe,CAACI,IAAI,CAAG,UAAU,CACjCD,aAAa,CAACE,GAAG,CAAG,uBAAuB,CAC/C,CACJ,CAEA;AACA,MAAO,eAAe,CAAAC,gBAAgBA,CAACC,eAAe,CAAEP,eAAe,CAAE,CACrE,KAAM,CAAAQ,aAAa,CAAGP,QAAQ,CAACC,cAAc,CAACK,eAAe,CAAC,CAACE,KAAK,CACpE,KAAM,CAAAC,aAAa,CAAGT,QAAQ,CAACC,cAAc,CAACF,eAAe,CAAC,CAACS,KAAK,CACpE,KAAM,CAAAE,YAAY,CAAG,CACjBC,QAAQ,CAAEJ,aAAa,CACvBK,QAAQ,CAAEH,aACd,CAAC,CAED;AACA,KAAM,CAAAI,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,iCAAiC,CAAE,CACvDC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACT,YAAY,CACrC,CAAC,CAAC,CAEF;AACA,GAAIG,GAAG,CAACO,EAAE,CAAE,CACRC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC,CAChD,MAAO,KAAI,CACf,CAAC,IAAM,CACHD,OAAO,CAACE,KAAK,CAAC,eAAe,CAAEV,GAAG,CAAC,CACnC,KAAM,IAAI,CAAAW,KAAK,CAAC,cAAc,CAAC,CACnC,CAEJ,CAEA;AACA,MAAO,eAAe,CAAAC,iBAAiBA,CAACnB,eAAe,CAAEP,eAAe,CAAE,CACtE,KAAM,CAAAQ,aAAa,CAAGP,QAAQ,CAACC,cAAc,CAACK,eAAe,CAAC,CAACE,KAAK,CACpE,KAAM,CAAAC,aAAa,CAAGT,QAAQ,CAACC,cAAc,CAACF,eAAe,CAAC,CAACS,KAAK,CACpE,KAAM,CAAAkB,aAAa,CAAG,CAClBf,QAAQ,CAAEJ,aAAa,CACvBK,QAAQ,CAAEH,aACd,CAAC,CAED;AACA,KAAM,CAAAI,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,kCAAkC,CAAE,CACxDC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACO,aAAa,CACtC,CAAC,CAAC,CAEF;AACA,GAAIb,GAAG,CAACO,EAAE,CAAE,CACRC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC,CACrC,CAAC,IAAM,CACHD,OAAO,CAACE,KAAK,CAAC,gBAAgB,CAAEV,GAAG,CAAC,CACpC,KAAM,IAAI,CAAAW,KAAK,CAAC,eAAe,CAAC,CACpC,CAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}